<launch>

    <!-- Loading Arguments -->
    <arg name="map"        default="stage_3"/>
    <arg name="planner_type"        default="rrt_star"/>
    <arg name="num_pos_initial"         default="1"/>
    <arg name="pos_uav_above_ugv"     default="3.0"/> #meters UAV above UGV
    <arg name="using_pc"    default="true"/> 
    <arg name="rviz"    default="true"/> 
    <arg name="viz_file"    default="random_planner"/>
    <arg name="sample_mode"    default="1"/>
    <arg name="write_data_files" default="true"/>
    <arg name="pc_user"    default="simon"/>     
    
    <arg name="pos_reel_x"    default="0.0"/> #position reel on UGV 
    <arg name="pos_reel_y"    default="0.0"/> #position reel on UGV
    <arg name="pos_reel_z"    default="0.5"/> #position reel on UGV
    <arg name="ugv_base_frame"    default="ugv_base_link"/> #position reel on UGV
    <arg name="use_parable"   default="false"/>
    <arg name="use_distance_function"   default="true"/>

    <arg name="save_path_in_file"   default="true"/>

    <!-- Publishing UGV and UAV tf -->
    <node pkg="marsupial_optimizer" type="optimizer_publisher_tf_node" name="optimizer_publisher_tf_node" output="screen">
        <rosparam command="load" file="$(find marsupial_optimizer)/cfg/$(arg map).yaml" />
        <param name="num_pos_initial" value="$(arg num_pos_initial)"/>
        <param name="pos_uav_above_ugv" value="$(arg pos_uav_above_ugv)"/>
        <param name="uav_base_frame" value="uav_base_link"/>
        <param name="ugv_base_frame" value="$(arg ugv_base_frame)"/>
        <param name="reel_base_frame" value="reel_base_link"/>
    </node>

    <!-- Publishing static tf -->
    <node pkg="tf" type="static_transform_publisher" name="map_tf_node" args="0 0 0 0 0 0  world /map 10"/> # x y z y p r
    <node pkg="tf" type="static_transform_publisher" name="reel_base_link_tf_node" args="$(arg pos_reel_x) $(arg pos_reel_y) $(arg pos_reel_z) -0.0 0.0 0.0  ugv_base_link reel_base_link 10"/> # x y z y p r

    <!-- Launch Octomap of Scenario -->
    <include file="$(find marsupial_optimizer)/launch/octomap_server.launch">
        <arg name="map_file"  value="$(arg map)"/>    
    </include>

    <include file="$(find marsupial_optimizer)/launch/octomap_server.launch">
        <arg name="map_file"  value="$(arg map)_obstacles"/>    
        <arg name="node_name"  value="octomap_server_obstacles"/>  
        <arg name="published_pc"  value="/region_growing_obstacles_pc_map"/>   
    </include>
    <include file="$(find marsupial_optimizer)/launch/octomap_server.launch">
        <arg name="map_file"  value="$(arg map)_traversability"/>   
        <arg name="node_name"  value="octomap_server_traversability"/>   
        <arg name="published_pc"  value="/region_growing_traversability_pc_map"/>   
    </include>

    <!-- Launch Optimizer and Global Planner-->
    <include file="$(find rrt_planners)/launch/random_global_planner.launch">
        <arg name="map_file" value="$(arg map)"/> 
        <arg name="num_pos_initial" value="$(arg num_pos_initial)" /> 
        <arg name="sample_mode_rrt" value="$(arg sample_mode)" /> 
        <arg name="planner_type" value="$(arg planner_type)" /> 
        <arg name="write_data_files" value="$(arg write_data_files)" /> 
        <arg name="pc_user_name" value="$(arg pc_user)" /> 
        <arg name="use_parable"   value="$(arg use_parable)"/>
        <arg name="use_distance_function"   value="$(arg use_distance_function)"/>
        <arg name="save_path_in_file"   value="$(arg save_path_in_file)"/>
    </include>    

    <!-- RViz -->
    <node pkg="rviz" name="rviz" type="rviz" args="-d $(find rrt_planners)/viz/$(arg viz_file).rviz" if="$(arg rviz)"/>
</launch>