<launch>
    # --------------------------------------------------------------------- PARAMETER --------------------------------------------------------------------- 
    
    ## General Parameters
    <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
    <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>

    <param name="use_sim_time" value="true" />
    <arg name="gui" default="true" />

    ## UAV Parameter
    <arg name="enable_logging" default="false"/>
    <arg name="enable_ground_truth" default="false"/>
    <arg name="mav_name" default="firefly" />
    <arg name="uav_name" default="dji_210" />
    <arg name="ugv_name" default="arco" />
    <arg name="ugv_x" default="-16.1" />
    <arg name="ugv_y" default="-3.5" />
    <arg name="ugv_z" default="0.1" />
    <arg name="ugv_th" default="0.5" />
    <arg name="uav_z" default="0.63" />

    ## UGV Parameter Define real/simulation and controller type
    <arg name="controller" value="controller" />                              <!-- Controller - joystick, move_base or controller -->
    <arg name="config" value="lispolis" />    
    <arg name="simulation" value="true" />                                  <!-- Define if it will run on a robot or simulation -->
    
    # --------------------------------------------------------------------- NODES --------------------------------------------------------------------- 
    
    # ---------------------------------------------------Start Gazebo environment ---------------------------------------------------
    <include file="$(find idmind_arco)/launch/empty_world.launch">
        <arg name="world_name" default="$(find idmind_arco)/worlds/$(arg config)_simul.world" />
        <arg name="paused" value="true" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="debug" value="false" />
        <arg name="verbose" value="true" />
    </include>

    <node pkg="tf" type="static_transform_publisher" name="tf_world" args="0.0 0.0 -0.0 0.0 -0.0 0.0  world  map 10"/> 

    # --------------------------------------------------- Start UGV Simulation ---------------------------------------------------
    ## UGV Gazebo
    <include file="$(find idmind_arco)/launch/start_robot.launch">
        <arg name="controller" value="$(arg controller)" />
        <arg name="simulation" value="true" />
        <arg name="config" value="$(arg config)" />
        <arg name="robot_name" value="$(arg ugv_name)" />
        <arg name="mapping" value="false" />
        <arg name="init_x" value="$(arg ugv_x)" />
        <arg name="init_y" value="$(arg ugv_y)" />
        <arg name="init_z" value="$(arg ugv_z)" />
        <arg name="init_th" value="$(arg ugv_th)" />
    </include>
    
    ## UGV Localization Stuff
    <group ns="$(arg ugv_name)">
        <node pkg="timed_roslaunch" type="timed_roslaunch.sh" name="timed_ugv_dll" output="screen"
            args="10 marsupial_optimizer dll.launch robot_name:=$(arg ugv_name)  initial_x:=12.0 initial_y:=20.08 initial_z:=0.3 initial_a:=0.0">
        </node>
    </group>

    <!-- PointCloud to laser scan -->
    <!-- <include file="$(find marsupial_optimizer)/launch/simulation/arco_pointcloud2_to_laser.launch">
        <arg name="robot_name" value="$(arg ugv_name)"/>
    </include> -->

    # --------------------------------------------------- Start UAV Simulation ---------------------------------------------------
    <group ns="$(arg mav_name)">
        ## UAV Gazebo
        <arg name="start_waypoint" default="$(arg ugv_x) $(arg ugv_y) 1.5 0 4"/>
        
        <node pkg="tf" type="static_transform_publisher" name="tf_ouster_broadcaster" args="0.0 0.0 -0.004645 0.0 0.0 0.0  $(arg mav_name)/base_link  $(arg mav_name)/os1_sensor 30"/>

        <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
              <arg name="mav_name" value="$(arg mav_name)" />
              <arg name="namespace" value="$(arg mav_name)" />
              <!-- <arg name="model" value="$(find rotors_description)/urdf/$(arg mav_name)_base.xacro"/> -->
              <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo"/>
              <arg name="enable_logging" value="$(arg enable_logging)" />
              <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
              <arg name="log_file" value="$(arg mav_name)"/>
              <arg name="x" value="$(arg ugv_x)"/>
              <arg name="y" value="$(arg ugv_y)"/>
              <arg name="z" value="$(arg uav_z)"/>
        </include>

        ## UAV Control Stuff
        <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
            <rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_$(arg mav_name).yaml" />
            <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
            <!-- <remap from="/$(arg mav_name)/odometry" to="/laser_odom_to_init"/> -->
            <remap from="/$(arg mav_name)/odometry" to="ground_truth/odometry"/>
        </node>
        
        <node name="velocity_PID_controller" pkg="rotors_control" type="velocity_PID_controller" output="screen">
            <!-- <remap from="/$(arg mav_name)/odom" to="/laser_odom_to_init"/> -->
            <remap from="/$(arg mav_name)/odom" to="ground_truth/odometry"/>
        </node>
        
        ## UAV Joy Stuff
        <node pkg="joy" type="joy_node" name="joy_$(arg mav_name)" respawn="true" >
            <param name="dev" type="string" value="/dev/input/js1" /> 
            <param name="deadzone" value="0.12" />
        </node>
        <node pkg="rotors_joy_interface" type="joy_vel" name="joy_vel_$(arg mav_name)" respawn="true" />

        ## UAV Localization Stuff
        <node pkg="timed_roslaunch" type="timed_roslaunch.sh" name="timed_uav_dll" output="screen"
            args="12 marsupial_optimizer dll.launch robot_name:=$(arg mav_name) initial_x:=12.0 initial_y:=20.08 initial_z:=0.5 initial_a:=0.0">
        </node>

    </group>
   
        ## UAV Lidar Odometry Stuff
        <node pkg="timed_roslaunch" type="timed_roslaunch.sh" name="timed_uav_aloam" output="screen"
            args="10 marsupial_optimizer aloam.launch robot_name:=$(arg mav_name) only_odometry:=true">
        </node>
        
        
        
</launch>